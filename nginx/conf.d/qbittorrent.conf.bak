server {
    listen 80;
    server_name qbittorrent.romptele.com;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;  # Added IPv6 support
    server_name qbittorrent.romptele.com;

    ssl_certificate /etc/letsencrypt/live/romptele.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/romptele.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/romptele.com/chain.pem;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security headers with relaxed CSP for qBittorrent
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; connect-src 'self' ws: wss:;" always;

    # Debug logging
    error_log /var/log/nginx/error.log debug;

    # Error handling
    proxy_intercept_errors on;
    error_page 502 /502.html;
    location = /502.html {
        internal;
        root /usr/share/nginx/html;
    }

    # Common proxy settings
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header Cookie $http_cookie;
    proxy_set_header Accept-Encoding "";
    proxy_set_header Connection "";
    proxy_set_header Origin $http_origin;
    proxy_set_header Referer $http_referer;
    proxy_set_header User-Agent $http_user_agent;

    # Cookie settings
    proxy_cookie_path / "/; secure; HttpOnly; SameSite=Lax";
    proxy_cookie_domain localhost $host;

    # Connection timeouts
    proxy_connect_timeout 300;
    proxy_send_timeout 300;
    proxy_read_timeout 300;
    send_timeout 300;

    # WebSocket support
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    # Common location settings
    proxy_buffering off;
    proxy_request_buffering off;
    client_max_body_size 0;
    proxy_redirect ~^http://[^/]+/(.*)$ https://$host/$1;

    location / {
        proxy_pass http://172.18.0.7:5080;
    }

    location /api/ {
        proxy_pass http://172.18.0.7:5080/api/;
    }

    location /command/ {
        proxy_pass http://172.18.0.7:5080/command/;
    }

    location /query/ {
        proxy_pass http://172.18.0.7:5080/query/;
    }

    location /sync/ {
        proxy_pass http://172.18.0.7:5080/sync/;
    }

    location /login/ {
        proxy_pass http://172.18.0.7:5080/login/;
    }
} 